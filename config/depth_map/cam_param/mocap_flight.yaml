%YAML:1.0
imu: 1         
num_of_cam: 1
#########2020-03-01 flight3_2020-03-01.bag#########  
#common parameters
imu_topic: "/dji_sdk/imu"    #/dji_sdk/imu,  /mavros/imu/data_raw
image_topic: "/arducam/triggered/camera/image_raw"

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.2          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.05         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 0.02         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 4.0e-5       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805       # gravity magnitude

#camera calibration 
model_type: PINHOLE
camera_name: camera

#AR0134_M25360H06
image_width: 640
image_height: 484
distortion_parameters:
   k1: -0.347793
   k2:  0.107340
   p1:  0.000722
   p2: -0.001039
projection_parameters:
   fx: 416.811266
   fy: 417.101651
   cx: 316.940768
   cy: 251.243429

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 0,  0,  1,
           -1,  0,  0, 
           0,  -1,  0]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.09, 0.07, 0.0]

multiple_thread: 1

#feature traker paprameters
max_cnt: 180            # max feature number in feature tracking
min_dist: 25            # min distance between two features 
freq: 25                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
# flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: -0.02                           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock) 

#For VINS, optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 1        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet).